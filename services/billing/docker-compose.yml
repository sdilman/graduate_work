x-default: &default
  restart: unless-stopped
  networks:
  - graduate-work
  env_file:
  - .env
  depends_on:
    python_base:
      condition: service_completed_successfully

services:
  billing_app_backend:
    <<: *default
    build:
      context: .
    ports:
    - ${APP_PORT}:${APP_PORT}
    expose:
    - ${APP_PORT}

  billing_app_redis:
    <<: *default
    image: redis:7.2.4
    expose:
    - ${REDIS_PORT}

  billing_app_postgres:
    <<: *default
    image: postgres:15
    expose:
    - ${POSTGRES_PORT}
    ports:
    - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
    - pg_prod_billing_data:/var/lib/postgresql/data

  billing_app_kafka_ui:
    <<: *default
    image: provectuslabs/kafka-ui:v0.7.0
    expose:
    - 8080
    ports:
    - 8080:8080

  billing_app_kafka-0:
    <<: *default
    image: ${KAFKA_CLUSTER_IMAGE}
    expose:
    - ${KAFKA_NODE_0_PORT}
    environment:
    - KAFKA_CFG_NODE_ID=${KAFKA_NODE_0_CFG_NODE_ID}
    - KAFKA_CFG_LISTENERS=${KAFKA_NODE_0_CFG_LISTENERS}
    - KAFKA_CFG_ADVERTISED_LISTENERS=${KAFKA_NODE_0_CFG_ADVERTISED_LISTENERS}
    volumes:
    - billing_app_kafka_0_data:/bitnami/kafka

  billing_app_kafka-1:
    <<: *default
    image: ${KAFKA_CLUSTER_IMAGE}
    expose:
    - ${KAFKA_NODE_1_PORT}
    environment:
    - KAFKA_CFG_NODE_ID=${KAFKA_NODE_1_CFG_NODE_ID}
    - KAFKA_CFG_LISTENERS=${KAFKA_NODE_1_CFG_LISTENERS}
    - KAFKA_CFG_ADVERTISED_LISTENERS=${KAFKA_NODE_1_CFG_ADVERTISED_LISTENERS}
    volumes:
    - billing_app_kafka_1_data:/bitnami/kafka

volumes:
  pg_prod_billing_data:
  billing_app_kafka_0_data:
  billing_app_kafka_1_data:

networks:
  graduate-work:
    name: graduate-work
