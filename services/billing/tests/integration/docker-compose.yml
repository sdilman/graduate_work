x-default: &default
  restart: unless-stopped
  env_file:
  - .env
  depends_on:
    python_base:
      condition: service_completed_successfully

services:
  billing_app_postgres:
    <<: *default
    image: postgres:15
    expose:
    - ${POSTGRES_PORT}
    ports:
    - ${POSTGRES_PORT}:${POSTGRES_PORT}
    networks:
    - graduate-work

  billing_app_redis:
    <<: *default
    image: redis:7.2.4
    expose:
    - ${REDIS_PORT}
    networks:
    - graduate-work

  billing_app_kafka-0:
    image: bitnami/kafka:3.4
    expose:
    - ${KAFKA_NODE_0_PORT}
    environment:
    - KAFKA_ENABLE_KRAFT=yes
    - KAFKA_CFG_PROCESS_ROLES=broker,controller
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - ALLOW_PLAINTEXT_LISTENER=yes
    - KAFKA_CFG_NODE_ID=0
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@billing_app_kafka-0:9093
    - KAFKA_KRAFT_CLUSTER_ID=${KAFKA_KRAFT_CLUSTER_ID}
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://billing_app_kafka-0:9092,EXTERNAL://127.0.0.1:9094
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    # volumes:
    #   - kafka_0_billing_data:/bitnami/kafka
    networks:
    - graduate-work

  app:
    <<: *default
    build:
      context: ../../
      dockerfile: Dockerfile
    networks:
    - graduate-work
    expose:
    - ${APP_PORT}

  tests:
    <<: *default
    restart: no
    build:
      context: ../../
      dockerfile: tests/integration/Dockerfile
    networks:
    - graduate-work
    depends_on:
    - app

# volumes:
#   kafka_0_billing_data:

networks:
  graduate-work:
    name: graduate-work
