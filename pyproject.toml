[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
color_output = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = false
disallow_untyped_decorators = false
exclude = [".*/migrations/.*", ".*/services/auth/.*", "docs", "venv", ".venv"]
explicit_package_bases = true
follow_imports = "skip"
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
plugins = ["pydantic.mypy"]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
strict = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
ignore_errors = true
module = ["*.auth.*", "*.tests.*", "*.migrations.*"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
force-exclude = true
line-length = 120
respect-gitignore = true

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"
quote-style = "double"
skip-magic-trailing-comma = true

[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
exclude = ["**/migrations/**", "**/auth/**", "**/tests/**"]
ignore = [
  "D",  # pydocstyle
  "TD",  # flake8-todos
  "FIX",  # flake8-fixme
  "ANN",  # flake8-annotations (handled by mypy)
  "EM",  # flake8-errmsg - String literals in exceptions
  "E501",  # pycodestyle - line too long (handled by formatter)
  "COM812",  # forced by ruff formatter
  "ISC001",  # forced by ruff formatter
  "TRY003",  # long message for exceptions
  "EM101",  # allow string literals for exceptions
  "EM102"  # allow f-string literals for exceptions
]
select = ["ALL"]
unfixable = [
  "F",  # pyflakes
  "ERA"  # eradicate - commented-out code
]

[tool.ruff.lint.flake8-tidy-imports]  # https://docs.astral.sh/ruff/settings/#lintflake8-tidy-imports
ban-relative-imports = "all"

[tool.ruff.lint.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]

[tool.ruff.lint.isort]  # https://docs.astral.sh/ruff/settings/#isort
lines-between-types = 1
section-order = [
  "future",
  "typing",
  "standard-library",
  "third-party",
  "first-party",
  "local-folder"
]
split-on-trailing-comma = false

[tool.ruff.lint.isort.sections]
"typing" = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.per-file-ignores]
"**/tests/**/*.py" = [
  "S101",  # Use of assert detected (assert allowed in tests)
  "PLR2004"  # Magic value used in comparison
]
"__init__.py" = [
  "F401",  # Unused import
  "F403",  # Import star
  "ARG001"  # Unused function argument (using fixtures from other fixtures)
]

[tool.ruff.lint.pycodestyle]  # https://docs.astral.sh/ruff/settings/#pycodestyle
max-doc-length = 100

[tool.ruff.lint.pydocstyle]  # https://docs.astral.sh/ruff/settings/#pydocstyle
convention = "google"

[tool.ruff.lint.pylint]  # https://docs.astral.sh/ruff/settings/#pylint
allow-dunder-method-names = ["__tablename__", "__table_args__"]
allow-magic-value-types = ["int", "str", "bytes"]
max-args = 10
max-statements = 30

[tool.uv]
dev-dependencies = [
  "ruff==0.6.2",
  "mypy==1.11.1",
  "pre-commit==3.8.0",
  "pytest>=8.3.2",
  "pytest-asyncio>=0.24.0",
  "pydantic>=2.8.2"
]

[tool.uv.workspace]
members = ["services/*"]
